{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "rcm-ind-df"
		},
		"formula1_delta_lake_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'formula1_delta_lake'"
		},
		"AzureDatabricks1_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "1221-104515-oxspt2q7"
		},
		"ergastAPI_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{concat(linkedService().api_url,linkedService().endpoint,'?','limit=',linkedService().limit)}"
		},
		"formula1_delta_lake_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://formuladldev.dfs.core.windows.net/"
		},
		"rcminddb_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "rcm-ind.database.windows.net"
		},
		"rcminddb_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "@{linkedService().database_name}"
		},
		"rcminddb_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "pri060"
		},
		"rcmindkeyvalutdev_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://rcm-ind-kv-dev.vault.azure.net/"
		},
		"rcmindsto_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://devrcmadls001.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/createTable')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.dynamicTable",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "CreateEMRTables",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"wildcardFolderPath": "hospital-b",
												"wildcardFileName": {
													"value": "@item().fileName",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "rcm_ind_flatfile_ds",
											"type": "DatasetReference",
											"parameters": {
												"container": "setup",
												"file_path": "*",
												"file_name": "*"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "rcm_ind_emr_ds",
											"type": "DatasetReference",
											"parameters": {
												"database_name": "trendytech-hospital-b",
												"schema_name": "dbo",
												"table_name": {
													"value": "@item().tableName",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"filepath": {
						"type": "String"
					},
					"dynamicTable": {
						"type": "array",
						"defaultValue": [
							{
								"fileName": "departments.csv",
								"tableName": "departments"
							},
							{
								"fileName": "encounters.csv",
								"tableName": "encounters"
							},
							{
								"fileName": "patients.csv",
								"tableName": "patients"
							},
							{
								"fileName": "providers.csv",
								"tableName": "providers"
							},
							{
								"fileName": "transactions.csv",
								"tableName": "transactions"
							}
						]
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-12-17T05:13:52Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/rcm_ind_flatfile_ds')]",
				"[concat(variables('factoryId'), '/datasets/rcm_ind_emr_ds')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/f1_load_to_bronze')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "config_lkup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureDatabricksDeltaLakeSource"
							},
							"dataset": {
								"referenceName": "config",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach_Source_Endpoint",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "config_lkup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('config_lkup').output.value",
								"type": "Expression"
							},
							"batchCount": 12,
							"activities": [
								{
									"name": "source_to_bronze",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "bronze_source",
											"type": "DatasetReference",
											"parameters": {
												"end_point": {
													"value": "@item().end_point",
													"type": "Expression"
												},
												"api_url": {
													"value": "@item().SOURCE",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "bronze_sink",
											"type": "DatasetReference",
											"parameters": {
												"container": {
													"value": "@item().TARGET",
													"type": "Expression"
												},
												"filename": {
													"value": "@concat(item().end_point,'.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "update_load_logs",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "source_to_bronze",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureDatabricksDeltaLakeSource",
											"query": {
												"value": "@concat('insert into audit.load_logs (DATA_SOURCE,TABLE_NAME,ROWS_MODIFIED) VALUES (''','bronze',''',''',item().end_point,''',''',activity('source_to_bronze').output.rowscopied,''')')",
												"type": "Expression"
											}
										},
										"dataset": {
											"referenceName": "load_logs",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/config')]",
				"[concat(variables('factoryId'), '/datasets/bronze_source')]",
				"[concat(variables('factoryId'), '/datasets/bronze_sink')]",
				"[concat(variables('factoryId'), '/datasets/load_logs')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/load_to_bronze')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "If Condition2",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(pipeline().parameters.loadType,'Full')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "audit_lkup",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureDatabricksDeltaLakeSource",
											"query": {
												"value": "@concat('select coalesce(cast(max(loaddate) as date),''','1900-01-01',''') as last_fetched_date from audit.load_logs where data_source=''',pipeline().parameters.datasource,''' and tablename=''',pipeline().parameters.tablename,''' ')",
												"type": "Expression"
											}
										},
										"dataset": {
											"referenceName": "rcm_ind_delta_lake_ds",
											"type": "DatasetReference",
											"parameters": {
												"schema_name": "''",
												"table_name": "''"
											}
										}
									}
								},
								{
									"name": "inc_load",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "audit_lkup",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('select *,''',pipeline().parameters.datasource,''' as datasource from ',pipeline().parameters.tablename,' where ',pipeline().parameters.watermark,' >=''',activity('audit_lkup').output.firstRow.last_fetched_date,'''')",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "rcm_ind_emr_ds",
											"type": "DatasetReference",
											"parameters": {
												"database_name": {
													"value": "@pipeline().parameters.database",
													"type": "Expression"
												},
												"schema_name": {
													"value": "@split(pipeline().parameters.tablename,'.')[0]",
													"type": "Expression"
												},
												"table_name": {
													"value": "@split(pipeline().parameters.tablename,'.')[1]",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "rcm_ind_parquet_ds",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"file_path": {
													"value": "@pipeline().parameters.targetpath",
													"type": "Expression"
												},
												"file_name": {
													"value": "@split(pipeline().parameters.tablename,'.')[1]",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "update_audit",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "inc_load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureDatabricksDeltaLakeSource",
											"query": {
												"value": "@concat('insert into audit.load_logs(data_source,tablename,numberofrowscopied,watermarkcolumnname,loaddate) values(''',pipeline().parameters.datasource,''',''',pipeline().parameters.tablename,''',''',activity('inc_load').output.rowscopied,''',''',pipeline().parameters.watermark,''',''',utcNow(),''')')",
												"type": "Expression"
											}
										},
										"dataset": {
											"referenceName": "rcm_ind_delta_lake_ds",
											"type": "DatasetReference",
											"parameters": {
												"schema_name": "''",
												"table_name": "''"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Full_Load",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('select *,''',pipeline().parameters.datasource,''' as datasource from ',pipeline().parameters.tablename)",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "rcm_ind_emr_ds",
											"type": "DatasetReference",
											"parameters": {
												"database_name": {
													"value": "@pipeline().parameters.database",
													"type": "Expression"
												},
												"schema_name": {
													"value": "@split(pipeline().parameters.tablename,'.')[0]",
													"type": "Expression"
												},
												"table_name": {
													"value": "@split(pipeline().parameters.tablename, '.')[1]",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "rcm_ind_parquet_ds",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"file_path": {
													"value": "@pipeline().parameters.targetpath",
													"type": "Expression"
												},
												"file_name": {
													"value": "@split(pipeline().parameters.tablename,'.')[1]",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "audit_update",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Full_Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureDatabricksDeltaLakeSource",
											"query": {
												"value": "@concat('insert into audit.load_logs(data_source,tablename,numberofrowscopied,watermarkcolumnname,loaddate) values(''',pipeline().parameters.datasource,''',''',pipeline().parameters.tablename,''',''',activity('Full_Load').output.rowscopied,''',''',pipeline().parameters.watermark,''',''',utcNow(),''')')",
												"type": "Expression"
											}
										},
										"dataset": {
											"referenceName": "rcm_ind_delta_lake_ds",
											"type": "DatasetReference",
											"parameters": {
												"schema_name": "''",
												"table_name": "''"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"loadType": {
						"type": "string"
					},
					"database": {
						"type": "string"
					},
					"tablename": {
						"type": "string"
					},
					"targetpath": {
						"type": "string"
					},
					"watermark": {
						"type": "string"
					},
					"datasource": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-12-21T13:37:50Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/rcm_ind_delta_lake_ds')]",
				"[concat(variables('factoryId'), '/datasets/rcm_ind_emr_ds')]",
				"[concat(variables('factoryId'), '/datasets/rcm_ind_parquet_ds')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_rcm_azure_db_delta_lake_bronze')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "lkp_config",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "rcm_ind_flatfile_ds",
								"type": "DatasetReference",
								"parameters": {
									"container": "configs",
									"file_path": "emr",
									"file_name": "load_config.csv"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "lkp_config",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('lkp_config').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 5,
							"activities": [
								{
									"name": "file_exists",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "rcm_ind_parquet_ds",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"file_path": {
													"value": "@item().targetpath",
													"type": "Expression"
												},
												"file_name": {
													"value": "@split(item().tablename,'.' )[1]",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"exists"
										],
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "ParquetReadSettings"
										}
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "file_exists",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@and(equals(activity('file_exists').output.exists,true),equals(item().is_active,'1' ))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "archive_file",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "ParquetSource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "ParquetReadSettings"
														}
													},
													"sink": {
														"type": "ParquetSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "ParquetWriteSettings"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "rcm_ind_parquet_ds",
														"type": "DatasetReference",
														"parameters": {
															"container": "bronze",
															"file_path": {
																"value": "@item().targetpath",
																"type": "Expression"
															},
															"file_name": {
																"value": "@split(item().tablename,'.')[1]",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "rcm_ind_parquet_ds",
														"type": "DatasetReference",
														"parameters": {
															"container": "bronze",
															"file_path": {
																"value": "@concat(item().targetpath,'/archive/',formatDateTime(utcNow(),'yyyy'),'/',formatDateTime(utcNow(),'%M'),'/',formatDateTime(utcNow(),'%d') )",
																"type": "Expression"
															},
															"file_name": {
																"value": "@split(item().tablename,'.')[1]",
																"type": "Expression"
															}
														}
													}
												]
											}
										]
									}
								},
								{
									"name": "If Condition2",
									"type": "IfCondition",
									"state": "Inactive",
									"onInactiveMarkAs": "Succeeded",
									"dependsOn": [
										{
											"activity": "If Condition1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(item().loadtype,'Full')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "audit_lkup",
												"type": "Lookup",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureDatabricksDeltaLakeSource",
														"query": {
															"value": "@concat('select coalesce(cast(max(loaddate) as date),''','1900-01-01',''') as last_fetched_date from audit.load_logs where data_source=''',item().datasource,''' and tablename=''',item().tablename,''' ')",
															"type": "Expression"
														}
													},
													"dataset": {
														"referenceName": "rcm_ind_delta_lake_ds",
														"type": "DatasetReference",
														"parameters": {
															"schema_name": "''",
															"table_name": "''"
														}
													}
												}
											},
											{
												"name": "inc_load",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "audit_lkup",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderQuery": {
															"value": "@concat('select *,''',item().datasource,''' as datasource from ',item().tablename,' where ',item().watermark,' >=''',activity('audit_lkup').output.firstRow.last_fetched_date,'''')",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"sink": {
														"type": "ParquetSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "ParquetWriteSettings"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "rcm_ind_emr_ds",
														"type": "DatasetReference",
														"parameters": {
															"database_name": {
																"value": "@item().database",
																"type": "Expression"
															},
															"schema_name": {
																"value": "@split(item().tablename,'.')[0]",
																"type": "Expression"
															},
															"table_name": {
																"value": "@split(item().tablename,'.')[1]",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "rcm_ind_parquet_ds",
														"type": "DatasetReference",
														"parameters": {
															"container": "bronze",
															"file_path": {
																"value": "@item().targetpath",
																"type": "Expression"
															},
															"file_name": {
																"value": "@split(item().tablename,'.')[1]",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "update_audit",
												"type": "Lookup",
												"dependsOn": [
													{
														"activity": "inc_load",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureDatabricksDeltaLakeSource",
														"query": {
															"value": "@concat('insert into audit.load_logs(data_source,tablename,numberofrowscopied,watermarkcolumnname,loaddate) values(''',item().datasource,''',''',item().tablename,''',''',activity('inc_load').output.rowscopied,''',''',item().watermark,''',''',utcNow(),''')')",
															"type": "Expression"
														}
													},
													"dataset": {
														"referenceName": "rcm_ind_delta_lake_ds",
														"type": "DatasetReference",
														"parameters": {
															"schema_name": "''",
															"table_name": "''"
														}
													}
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Full_Load",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderQuery": {
															"value": "@concat('select *,''',item().datasource,''' as datasource from ',item().tablename)",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"sink": {
														"type": "ParquetSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "ParquetWriteSettings"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "rcm_ind_emr_ds",
														"type": "DatasetReference",
														"parameters": {
															"database_name": {
																"value": "@item().database",
																"type": "Expression"
															},
															"schema_name": {
																"value": "@split(item().tablename,'.')[0]",
																"type": "Expression"
															},
															"table_name": {
																"value": "@split(item().tablename, '.')[1]",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "rcm_ind_parquet_ds",
														"type": "DatasetReference",
														"parameters": {
															"container": "bronze",
															"file_path": {
																"value": "@item().targetpath",
																"type": "Expression"
															},
															"file_name": {
																"value": "@split(item().tablename,'.')[1]",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "audit_update",
												"type": "Lookup",
												"dependsOn": [
													{
														"activity": "Full_Load",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureDatabricksDeltaLakeSource",
														"query": {
															"value": "@concat('insert into audit.load_logs(data_source,tablename,numberofrowscopied,watermarkcolumnname,loaddate) values(''',item().datasource,''',''',item().tablename,''',''',activity('Full_Load').output.rowscopied,''',''',item().watermark,''',''',utcNow(),''')')",
															"type": "Expression"
														}
													},
													"dataset": {
														"referenceName": "rcm_ind_delta_lake_ds",
														"type": "DatasetReference",
														"parameters": {
															"schema_name": "''",
															"table_name": "''"
														}
													}
												}
											}
										]
									}
								},
								{
									"name": "If Condition3",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "If Condition2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(item().is_active,'1' )",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "load_to_bronze",
												"type": "ExecutePipeline",
												"dependsOn": [],
												"policy": {
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "load_to_bronze",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {}
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-12-21T14:31:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/rcm_ind_flatfile_ds')]",
				"[concat(variables('factoryId'), '/datasets/rcm_ind_parquet_ds')]",
				"[concat(variables('factoryId'), '/datasets/rcm_ind_delta_lake_ds')]",
				"[concat(variables('factoryId'), '/datasets/rcm_ind_emr_ds')]",
				"[concat(variables('factoryId'), '/pipelines/load_to_bronze')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/bronze_sink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "formula1_delta_lake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container": {
						"type": "string"
					},
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().container",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/formula1_delta_lake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/bronze_source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ergastAPI",
					"type": "LinkedServiceReference",
					"parameters": {
						"endpoint": {
							"value": "@dataset().end_point",
							"type": "Expression"
						},
						"limit": "1000",
						"api_url": {
							"value": "@dataset().api_url",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"end_point": {
						"type": "string"
					},
					"api_url": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ergastAPI')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/config')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "formula1_metastore",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureDatabricksDeltaLakeDataset",
				"typeProperties": {
					"database": "audit",
					"table": "job_config"
				},
				"schema": [
					{
						"name": "SOURCE",
						"type": "string"
					},
					{
						"name": "ENDPOINT",
						"type": "string"
					},
					{
						"name": "LOAD_TYPE",
						"type": "string"
					},
					{
						"name": "TARGET",
						"type": "string"
					},
					{
						"name": "DATE_MODIFIED",
						"type": "timestamp"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/formula1_metastore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/load_logs')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "formula1_metastore",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureDatabricksDeltaLakeDataset",
				"typeProperties": {
					"table": "load_logs"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/formula1_metastore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/rcm_ind_delta_lake_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "rcmIndDeltaLakeDev",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"schema_name": {
						"type": "String"
					},
					"table_name": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureDatabricksDeltaLakeDataset",
				"typeProperties": {
					"database": {
						"value": "@dataset().schema_name",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().table_name",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/rcmIndDeltaLakeDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/rcm_ind_emr_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "rcminddb",
					"type": "LinkedServiceReference",
					"parameters": {
						"database_name": {
							"value": "@dataset().database_name",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"database_name": {
						"type": "String"
					},
					"schema_name": {
						"type": "String"
					},
					"table_name": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schema_name",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().table_name",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/rcminddb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/rcm_ind_flatfile_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "rcmindsto",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container": {
						"type": "string"
					},
					"file_path": {
						"type": "string"
					},
					"file_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().file_path",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().container",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/rcmindsto')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/rcm_ind_parquet_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "rcmindsto",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container": {
						"type": "String"
					},
					"file_path": {
						"type": "String"
					},
					"file_name": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().file_path",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().container",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/rcmindsto')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-931282571205276.16.azuredatabricks.net",
					"accessToken": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "rcmindkeyvalutdev",
							"type": "LinkedServiceReference"
						},
						"secretName": "rcm-ind-databrick-ws"
					},
					"existingClusterId": "[parameters('AzureDatabricks1_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/rcmindkeyvalutdev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ergastAPI')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"endpoint": {
						"type": "string"
					},
					"limit": {
						"type": "string"
					},
					"api_url": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('ergastAPI_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/formula1_delta_lake')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('formula1_delta_lake_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('formula1_delta_lake_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/formula1_metastore')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricksDeltaLake",
				"typeProperties": {
					"domain": "https://adb-3066104143265505.5.azuredatabricks.net",
					"clusterId": "1226-102120-7kfiszda",
					"accessToken": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "rcmindkeyvalutdev",
							"type": "LinkedServiceReference"
						},
						"secretName": "formula1-dbr-ws"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/rcmindkeyvalutdev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/rcmIndDeltaLakeDev')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricksDeltaLake",
				"typeProperties": {
					"domain": "https://adb-931282571205276.16.azuredatabricks.net",
					"clusterId": "1221-104515-oxspt2q7",
					"accessToken": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "rcmindkeyvalutdev",
							"type": "LinkedServiceReference"
						},
						"secretName": "rcm-ind-databrick-ws"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/rcmindkeyvalutdev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/rcminddb')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"database_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('rcminddb_properties_typeProperties_server')]",
					"database": "[parameters('rcminddb_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('rcminddb_properties_typeProperties_userName')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "rcmindkeyvalutdev",
							"type": "LinkedServiceReference"
						},
						"secretName": "azure-sql-db-password"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/rcmindkeyvalutdev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/rcmindkeyvalutdev')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('rcmindkeyvalutdev_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/rcmindsto')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('rcmindsto_properties_typeProperties_url')]",
					"accountKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "rcmindkeyvalutdev",
							"type": "LinkedServiceReference"
						},
						"secretName": "access-key-devrcmadls001"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/rcmindkeyvalutdev')]"
			]
		}
	]
}